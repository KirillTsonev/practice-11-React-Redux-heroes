{"version":3,"sources":["api/apiSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","data","heroes","isLoading","isError","activeFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","useHttp","request","headers","fetch","response","ok","Error","status","json","filtersAdapter","createEntityAdapter","initialState","getInitialState","filtersLoadingStatus","fetchFilters","createAsyncThunk","a","filtersSlice","createSlice","reducers","filtersChanged","action","payload","extraReducers","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","unwrap","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","dispatch","useDispatch","useEffect","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAWC,YAAU,CAC9BC,YAAa,MACbC,UAAWC,YAAe,CAACC,QAAS,0BACpCC,SAAU,CAAC,UACXC,UAAW,SAAAC,GAAO,MAAK,CACnBC,UAAWD,EAAQE,MAAM,CACrBA,MAAO,iBAAM,WACbC,aAAc,CAAC,YAEnBC,WAAYJ,EAAQK,SAAS,CACzBH,MAAO,SAAAI,GAAI,MAAK,CACZC,IAAK,UACLC,OAAQ,OACRC,KAAMH,IAEVI,gBAAiB,CAAC,YAEtBC,WAAYX,EAAQK,SAAS,CACzBH,MAAO,SAAAU,GAAE,MAAK,CACVL,IAAI,WAAD,OAAaK,GAChBJ,OAAQ,WAEZE,gBAAiB,CAAC,gBAKhBG,EAAmErB,EAAnEqB,kBAAmBC,EAAgDtB,EAAhDsB,sBAAuBC,EAAyBvB,EAAzBuB,sB,OCazCC,EAzCQ,SAAH,GAAgD,IAE5DC,EAFiBC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAIjD,OAAQD,GACJ,IAAK,OACDH,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBACIK,UAAS,kDAA6CL,GAAmB,UACzE,qBAAKM,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAW,UAEtB,oBAAIA,UAAU,aAAY,SAAEJ,IAC5B,mBAAGI,UAAU,YAAW,SAAEH,OAE9B,sBAAMO,QAASL,EACXC,UAAU,wFAAuF,SACjG,wBAAQK,KAAK,SAASL,UAAU,sBAAsBM,aAAW,gBC3BlEC,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAQ,SACtD,sBAAMR,UAAU,kBAAiB,2BCsE9BS,G,MA/DI,WAAO,IAAD,EAKjBlB,IAAmB,IAHnBmB,KAAMC,OAAM,MAAG,GAAE,EACjBC,EAAS,EAATA,UACAC,EAAO,EAAPA,QAAO,EAGUpB,IAAdJ,EAAqC,iBAA3B,GAEXyB,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,gBAElDI,EAAiBC,mBAAQ,WAC3B,IAAMD,EAAiBP,EAAOS,QAE9B,MAAqB,QAAjBN,EACOI,EAEAA,EAAeG,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,UAAYgB,OAE3D,CAACH,EAAQG,IAENf,EAAWwB,uBAAY,SAACjC,GAC1BD,EAAWC,KAEZ,IAEH,GAAIsB,EACA,OAAO,cAAC,EAAO,IACZ,GAAIC,EACP,OAAO,oBAAIb,UAAU,mBAAkB,2BAG3C,IAA0BwB,EAuBpBC,EAtBiB,KADGD,EAuBQN,GAtBtBQ,OAEA,cAACC,EAAA,EAAa,CACVC,QAAS,EACTC,WAAW,OAAM,SACjB,oBAAI7B,UAAU,mBAAkB,6BAKrCwB,EAAIM,KAAI,YAAqB,IAAnBxC,EAAE,EAAFA,GAAOyC,EAAK,sBACzB,OACI,cAACJ,EAAA,EAAa,CAEVC,QAAS,IACTC,WAAW,OAAM,SACjB,cAAC,EAAc,2BAAME,GAAK,IAAEhC,SAAU,kBAAMA,EAAST,QAHhDA,MAUrB,OACI,cAAC0C,EAAA,EAAe,CAACC,UAAU,KAAI,SAC1BR,M,gDCrEAS,EAAU,WAmBnB,MAAO,CAACC,QAjBK,uCAAG,WAAOlD,GAAG,2FAA6E,OAA3EC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMiD,EAAO,+BAAG,CAAC,eAAgB,oBAAmB,kBAGxEC,MAAMpD,EAAK,CAACC,SAAQC,OAAMiD,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,mBAAD,OAAoBvD,EAAG,qBAAaqD,EAASG,SAAU,KAAD,mBAGtDH,EAASI,OAAO,KAAD,GAAxB,OAAJhC,EAAI,yBAEHA,GAAI,uGAIlB,gBAfY,wCCCXiC,EAAiBC,cAEjBC,EAAeF,EAAeG,gBAAgB,CAChDC,qBAAsB,OACtBjC,aAAc,QAGLkC,EAAeC,YACxB,uBAAsB,sBACtB,8BAAAC,EAAA,sDACkB,OADlB,EACsBhB,IAAXC,EAAO,EAAPA,QAAO,SACDA,EAAQ,4DAA4D,KAAD,+EAIlFgB,EAAeC,YAAY,CAC7BxD,KAAM,UACNiD,eACAQ,SAAU,CACNC,eAAgB,SAACtC,EAAOuC,GACpBvC,EAAMF,aAAeyC,EAAOC,UAGpCC,cAAe,SAAC/E,GACZA,EACKgF,QAAQV,EAAaW,SAAS,SAAA3C,GAAUA,EAAM+B,qBAAuB,aACrEW,QAAQV,EAAaY,WAAW,SAAC5C,EAAOuC,GACrCvC,EAAM+B,qBAAuB,OAC7BJ,EAAekB,OAAO7C,EAAOuC,EAAOC,YAEvCE,QAAQV,EAAac,UAAU,SAAA9C,GAC5BA,EAAM+B,qBAAuB,WAEhCgB,gBAAe,kBAIrBC,EAAoBb,EAApBa,QAEQC,EAFYd,EAAXc,QAIFC,EAAavB,EAAewB,cAAa,SAAAnD,GAAK,OAAIA,EAAMC,WAAxDiD,UAMVZ,GACAU,EAJAI,gBAIAJ,EAHAK,eAGAL,EAFAM,qBAEAN,EADAV,gBC9CEiB,EAAmB,WAAH,OAAS,SAACC,GAAI,OAAK,SAACjB,GACtC,OACWiB,EADW,kBAAXjB,EACK,CACRlD,KAAMkD,GAGFA,MAUDkB,EAPDC,YAAe,CACzBT,QAAQ,aAAIhD,WACC/C,EAASE,YAAcF,EAAS+F,SAC7CU,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,EAAkBrG,EAASyG,aAC7FG,UAAUC,ICiFCC,EA1FO,WAAO,IAAD,EACQC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,OACMF,mBAAS,IAAG,mBAAvCG,EAAS,KAAEC,EAAY,OACQJ,mBAAS,IAAG,mBAA3CK,EAAW,KAAEC,EAAc,OAEb/F,IAAdV,EAAqC,iBAA3B,GAEViE,EAAwBhC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAnD8B,qBACD9B,EAAUiD,EAAUO,EAAMe,YAmChC,OACI,uBAAMxF,UAAU,+BAA+ByF,SAlC3B,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAU,CACZtG,GAAIuG,cACJjG,KAAMsF,EACNrF,YAAauF,EACbtF,QAASwF,GAGbxG,EAAW8G,GAASE,SAEpBX,EAAY,IACZE,EAAa,IACbE,EAAe,KAqB0D,UACrE,sBAAKvF,UAAU,OAAM,UACjB,uBAAO+F,QAAQ,OAAO/F,UAAU,kBAAiB,2BACjD,uBACIgG,UAAQ,EACR3F,KAAK,OACLT,KAAK,OACLI,UAAU,eACVV,GAAG,OACH2G,YAAY,mBACZC,MAAOhB,EACPiB,SAAU,SAACT,GAAC,OAAKP,EAAYO,EAAEU,OAAOF,aAG9C,sBAAKlG,UAAU,OAAM,UACjB,uBAAO+F,QAAQ,OAAO/F,UAAU,kBAAiB,yBACjD,0BACIgG,UAAQ,EACRpG,KAAK,OACLI,UAAU,eACVV,GAAG,OACH2G,YAAY,iBACZ9F,MAAO,CAAC,OAAU,SAClB+F,MAAOd,EACPe,SAAU,SAACT,GAAC,OAAKL,EAAaK,EAAEU,OAAOF,aAG/C,sBAAKlG,UAAU,OAAM,UACjB,uBAAO+F,QAAQ,UAAU/F,UAAU,aAAY,kCAC/C,yBACIgG,UAAQ,EACRhG,UAAU,cACVV,GAAG,UACHM,KAAK,UACLsG,MAAOZ,EACPa,SAAU,SAACT,GAAC,OAAKH,EAAeG,EAAEU,OAAOF,QAAO,UAChD,wBAAQA,MAAM,GAAE,oDAtDV,SAACjF,EAASwB,GAC5B,MAAe,YAAXA,EACO,sDACW,UAAXA,EACA,mDAGPxB,GAAWA,EAAQS,OAAS,EACrBT,EAAQa,KAAI,YAAoB,IAAlBlC,EAAI,EAAJA,KAAMyG,EAAK,EAALA,MAEvB,GAAa,QAATzG,EAEJ,OAAO,wBAAmBsG,MAAOtG,EAAK,SAAEyG,GAApBzG,WAL5B,EAgDa0G,CAAcrF,EAAS8B,SAIhC,wBAAQ1C,KAAK,SAASL,UAAU,kBAAiB,wB,iBChC9CuG,EApDO,WAAO,IAAD,EAEqBxF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAjE8B,EAAoB,EAApBA,qBAAsBjC,EAAY,EAAZA,aACvBG,EAAUiD,EAAUO,EAAMe,YAC1BgB,EAAWC,cACVtE,EAAWD,IAAXC,QAOP,GALAuE,qBAAU,WACNF,EAASxD,EAAab,MAEvB,IAE0B,YAAzBY,EACA,OAAO,cAAC,EAAO,IACZ,GAA6B,UAAzBA,EACP,OAAO,oBAAI/C,UAAU,mBAAkB,2BAG3C,IAAuBwB,EAoBjBC,EAnBiB,KADAD,EAoBQP,GAnBnBS,OACG,oBAAI1B,UAAU,mBAAkB,+BAGpCwB,EAAIM,KAAI,YAA+B,IAA7BlC,EAAI,EAAJA,KAAMI,EAAS,EAATA,UAAWqG,EAAK,EAALA,MAExBM,EAAW9E,IAAW,MAAO7B,EAAW,CAC1C,OAAUJ,IAASkB,IAGvB,OAAO,wBAEKxB,GAAIM,EACJI,UAAW2G,EACXvG,QAAS,kBAAMoG,EAASlD,EAAe1D,KAAO,SAC5CyG,GAJGzG,MAUzB,OACI,qBAAKI,UAAU,sBAAqB,SAChC,sBAAKA,UAAU,YAAW,UACtB,mBAAGA,UAAU,YAAW,iDACxB,qBAAKA,UAAU,YAAW,SACrByB,UCjCNmF,G,MAfH,WAER,OACI,sBAAM5G,UAAU,MAAK,SACjB,sBAAKA,UAAU,UAAS,UACpB,cAAC,EAAU,IACX,sBAAKA,UAAU,uBAAsB,UACjC,cAAC,EAAa,IACd,cAAC,EAAa,c,MCLlC6G,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAQ,CAACtC,MAAOA,EAAM,SACrB,cAAC,EAAG,QAGRuC,SAASC,eAAe,W","file":"static/js/main.0884381e.chunk.js","sourcesContent":["import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n    reducerPath: 'api',\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\n    tagTypes: ['Heroes'],\n    endpoints: builder => ({\n        getHeroes: builder.query({\n            query: () => '/heroes',\n            providesTags: ['Heroes']\n        }),\n        createHero: builder.mutation({\n            query: hero => ({\n                url: '/heroes',\n                method: 'POST',\n                body: hero\n            }),\n            invalidatesTags: ['Heroes']\n        }),\n        deleteHero: builder.mutation({\n            query: id => ({\n                url: `/heroes/${id}`,\n                method: 'DELETE'\n            }),\n            invalidatesTags: ['Heroes']\n        })\n    })\n});\n\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete} \n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n    const {\n        data: heroes = [],\n        isLoading,\n        isError,\n    } = useGetHeroesQuery();\n\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const activeFilter = useSelector(state => state.filters.activeFilter);\n\n    const filteredHeroes = useMemo(() => {\n        const filteredHeroes = heroes.slice();\n\n        if (activeFilter === 'all') {\n            return filteredHeroes;\n        } else {\n            return filteredHeroes.filter(item => item.element === activeFilter);\n        }\n    }, [heroes, activeFilter]);\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id);\n        // eslint-disable-next-line  \n    }, []);\n\n    if (isLoading) {\n        return <Spinner/>;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Loading error</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">No heroes yet</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport {useHttp} from '../../hooks/http.hook';\n\nconst filtersAdapter = createEntityAdapter();\n\nconst initialState = filtersAdapter.getInitialState({\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n});\n\nexport const fetchFilters = createAsyncThunk(\n    'filters/fetchFilters',\n    async () => {\n        const {request} = useHttp();\n        return await request(\"https://6348588d0b382d796c6fde8e.mockapi.io/hero_filters\");\n    }\n);\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        filtersChanged: (state, action) => {\n            state.activeFilter = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                filtersAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchFilters.rejected, state => {\n                state.filtersLoadingStatus = 'error';\n            })\n            .addDefaultCase(() => {})\n    }\n});\n\nconst {actions, reducer} = filtersSlice;\n\nexport default reducer;\n\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\n\nexport const {\n    filtersFetching,\n    filtersFetched,\n    filtersFetchingError,\n    filtersChanged\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport { apiSlice } from '../api/apiSlice'; \n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {  filters, \n                [apiSlice.reducerPath]: apiSlice.reducer},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production'\n})\n\nexport default store;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport store from '../../store';\n\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { useCreateHeroMutation } from '../../api/apiSlice';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const [createHero] = useCreateHeroMutation();\n\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        createHero(newHero).unwrap();\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Loading elements</option>\n        } else if (status === \"error\") {\n            return <option>Loading error</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">New hero name</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"What is my name?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Description</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"What can I do?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Choose hero elements</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">I possess the power of the elements...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport store from '../../store';\n\nimport { filtersChanged, fetchFilters, selectAll } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Loading error</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Filters not found</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Filter the heroes by their elements</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}